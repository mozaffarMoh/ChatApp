import React, { useEffect, useState } from "react";
import "./App.scss";
import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
import { Home, Login, Register, StartPage } from "./pages";
import { MdDownload } from "react-icons/md";

// Register the service worker (this gets auto-generated by vite-plugin-pwa)
if ("serviceWorker" in navigator) {
  window.addEventListener("load", () => {
    navigator.serviceWorker
      .register("/X-and-O/sw.js")
      .then((res) => {
        console.log("service work is run", res);
      })
      .catch((err) => {
        console.log("service work is run", err);
      });
  });
}

const App: React.FC = () => {
  const [deferredPrompt, setDeferredPrompt]: any = useState(null);
  const [showInstallButton, setShowInstallButton] = useState(false);

  // Handle install prompt
  useEffect(() => {
    const handler = (e: any) => {
      e.preventDefault();
      setDeferredPrompt(e);
      console.log("ðŸ”¥ beforeinstallprompt fired", e);
      setShowInstallButton(true);
    };

    window.addEventListener("beforeinstallprompt", handler);

    return () => {
      window.removeEventListener("beforeinstallprompt", handler);
    };
  }, []);

  const handleInstallClick = async () => {
    if (!deferredPrompt) return;

    deferredPrompt.prompt();
    const { outcome } = await deferredPrompt.userChoice;
    console.log(`User response to install prompt: ${outcome}`);

    setDeferredPrompt(null);
    setShowInstallButton(false);
  };

  return (
    <>
      {showInstallButton && (
        <button onClick={handleInstallClick} className="downlaod-app-button">
          <MdDownload size={20} /> Donwload App
        </button>
      )}
      <Router basename="/ChatApp">
        <Routes>
          <Route path="/" element={<Home />} />
          <Route path="/start-page" element={<StartPage />} />
          <Route path="/login" element={<Login />} />
          <Route path="/sign-up" element={<Register />} />
        </Routes>
      </Router>
    </>
  );
};

export default App;
